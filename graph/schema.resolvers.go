package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"anograph/graph/model"
	"anograph/internal/coba"
	"context"

	"github.com/google/uuid"
)
type Resolver struct {
	CobaRepo coba.CobaRepository
}

// Resolver untuk Query cobas
func (r *queryResolver) Cobas(ctx context.Context) ([]*model.Coba, error) {
	return r.CobaRepo.GetAll()
}

// Resolver untuk Query getCoba
func (r *queryResolver) GetCoba(ctx context.Context, id string) (*model.Coba, error) {
	return r.CobaRepo.GetByID(id)
}

// Resolver untuk Mutation createCoba
func (r *mutationResolver) CreateCoba(ctx context.Context, input model.NewCobaInput) (*model.Coba, error) {
	newCoba := &model.Coba{
		ID:    uuid.New().String(), // gunakan UUID atau mekanisme ID unik lainnya
		Name: input.Name,
	}
	return r.CobaRepo.Create(newCoba)
}

// Resolver untuk Mutation updateCoba
func (r *mutationResolver) UpdateCoba(ctx context.Context, input model.UpdateCobaInput) (*model.Coba, error) {
	existingCoba, err := r.CobaRepo.GetByID(input.ID)
	if err != nil {
		return nil, err
	}

	existingCoba.Name = input.Name
	return r.CobaRepo.Update(existingCoba)
}

// Resolver untuk Mutation deleteCoba
func (r *mutationResolver) DeleteCoba(ctx context.Context, id string) (bool, error) {
	err := r.CobaRepo.Delete(id)
	if err != nil {
		return false, err
	}
	return true, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
}
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	panic(fmt.Errorf("not implemented: Todos - todos"))
}
func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	panic(fmt.Errorf("not implemented: Users - users"))
}
*/
